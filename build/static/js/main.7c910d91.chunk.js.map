{"version":3,"sources":["route/__generated__/HomeRepositoryNameQuery.graphql.js","config/authMethods.js","context/Token/TokenContext.js","components/body/Body.jsx","components/navbar/Navbar.jsx","context/Token/TokenState.js","App.js","route/List.jsx","FetchGraphQL.jsx","RelayEnvironment.js","route/Home.jsx","index.js"],"names":["node","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","hash","module","exports","githubProvider","GithubAuthProvider","TokenContext","createContext","Body","validation","useContext","Container","fixed","sx","display","flexDirection","justifyContent","alignItems","height","Box","Typography","color","my","fontSize","fontWeight","Button","onClick","signInAuth","size","variant","backgroundColor","Navbar","AppBar","position","Toolbar","flexGrow","IconButton","mx","letterSpacing","TokenState","props","useState","tokenValue","setTokenValue","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Provider","value","provider","auth","getAuth","signInWithPopup","then","result","token","credentialFromResult","accessToken","console","log","localStorage","setItem","user","reloadUserInfo","screenName","window","location","catch","error","children","App","className","Transition","React","ref","Slide","direction","columns","field","headerName","width","ListComponent","data","open","setOpen","row","setRow","rows","map","d","i","Object","assign","id","name","createDate","createdAt","url","handleClose","style","pageSize","rowsPerPageOptions","onRowClick","event","Dialog","fullScreen","onClose","TransitionComponent","edge","ml","flex","component","List","ListItem","ListItemText","primary","secondary","href","rel","target","text","variables","a","TOKEN","getItem","fetch","method","headers","Authorization","body","JSON","stringify","query","response","json","FetchGraphQL","params","env","Environment","network","Network","create","store","Store","RecordSource","Suspense","RepositoryNameQuery","preloadedQuery","loadQuery","usr","Home","usePreloadedQuery","fluid","clear","flexWrap","repositories","nodes","HomeRoot","environment","fallback","CircularProgress","ReactDOM","render","StrictMode","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.7c910d91.chunk.js","sourcesContent":["/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type HomeRepositoryNameQueryVariables = {|\n  usr: string\n|};\nexport type HomeRepositoryNameQueryResponse = {|\n  +user: ?{|\n    +repositories: {|\n      +nodes: ?$ReadOnlyArray<?{|\n        +name: string,\n        +description: ?string,\n        +collaborators: ?{|\n          +nodes: ?$ReadOnlyArray<?{|\n            +name: ?string\n          |}>\n        |},\n        +issues: {|\n          +nodes: ?$ReadOnlyArray<?{|\n            +__typename: string\n          |}>\n        |},\n        +createdAt: any,\n        +url: any,\n      |}>\n    |}\n  |}\n|};\nexport type HomeRepositoryNameQuery = {|\n  variables: HomeRepositoryNameQueryVariables,\n  response: HomeRepositoryNameQueryResponse,\n|};\n*/\n\n\n/*\nquery HomeRepositoryNameQuery(\n  $usr: String!\n) {\n  user(login: $usr) {\n    repositories(first: 100, orderBy: {field: CREATED_AT, direction: DESC}) {\n      nodes {\n        name\n        description\n        collaborators(first: 10) {\n          nodes {\n            name\n            id\n          }\n        }\n        issues(first: 10, orderBy: {field: CREATED_AT, direction: DESC}) {\n          nodes {\n            __typename\n            id\n          }\n        }\n        createdAt\n        url\n        id\n      }\n    }\n    id\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"usr\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"login\",\n    \"variableName\": \"usr\"\n  }\n],\nv2 = {\n  \"kind\": \"Literal\",\n  \"name\": \"orderBy\",\n  \"value\": {\n    \"direction\": \"DESC\",\n    \"field\": \"CREATED_AT\"\n  }\n},\nv3 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"first\",\n    \"value\": 100\n  },\n  (v2/*: any*/)\n],\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"description\",\n  \"storageKey\": null\n},\nv6 = {\n  \"kind\": \"Literal\",\n  \"name\": \"first\",\n  \"value\": 10\n},\nv7 = [\n  (v6/*: any*/)\n],\nv8 = [\n  (v6/*: any*/),\n  (v2/*: any*/)\n],\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"__typename\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"createdAt\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"HomeRepositoryNameQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v3/*: any*/),\n            \"concreteType\": \"RepositoryConnection\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"repositories\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Repository\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"nodes\",\n                \"plural\": true,\n                \"selections\": [\n                  (v4/*: any*/),\n                  (v5/*: any*/),\n                  {\n                    \"alias\": null,\n                    \"args\": (v7/*: any*/),\n                    \"concreteType\": \"RepositoryCollaboratorConnection\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"collaborators\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": \"User\",\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"nodes\",\n                        \"plural\": true,\n                        \"selections\": [\n                          (v4/*: any*/)\n                        ],\n                        \"storageKey\": null\n                      }\n                    ],\n                    \"storageKey\": \"collaborators(first:10)\"\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": (v8/*: any*/),\n                    \"concreteType\": \"IssueConnection\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"issues\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": \"Issue\",\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"nodes\",\n                        \"plural\": true,\n                        \"selections\": [\n                          (v9/*: any*/)\n                        ],\n                        \"storageKey\": null\n                      }\n                    ],\n                    \"storageKey\": \"issues(first:10,orderBy:{\\\"direction\\\":\\\"DESC\\\",\\\"field\\\":\\\"CREATED_AT\\\"})\"\n                  },\n                  (v10/*: any*/),\n                  (v11/*: any*/)\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": \"repositories(first:100,orderBy:{\\\"direction\\\":\\\"DESC\\\",\\\"field\\\":\\\"CREATED_AT\\\"})\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"HomeRepositoryNameQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v3/*: any*/),\n            \"concreteType\": \"RepositoryConnection\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"repositories\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Repository\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"nodes\",\n                \"plural\": true,\n                \"selections\": [\n                  (v4/*: any*/),\n                  (v5/*: any*/),\n                  {\n                    \"alias\": null,\n                    \"args\": (v7/*: any*/),\n                    \"concreteType\": \"RepositoryCollaboratorConnection\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"collaborators\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": \"User\",\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"nodes\",\n                        \"plural\": true,\n                        \"selections\": [\n                          (v4/*: any*/),\n                          (v12/*: any*/)\n                        ],\n                        \"storageKey\": null\n                      }\n                    ],\n                    \"storageKey\": \"collaborators(first:10)\"\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": (v8/*: any*/),\n                    \"concreteType\": \"IssueConnection\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"issues\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": \"Issue\",\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"nodes\",\n                        \"plural\": true,\n                        \"selections\": [\n                          (v9/*: any*/),\n                          (v12/*: any*/)\n                        ],\n                        \"storageKey\": null\n                      }\n                    ],\n                    \"storageKey\": \"issues(first:10,orderBy:{\\\"direction\\\":\\\"DESC\\\",\\\"field\\\":\\\"CREATED_AT\\\"})\"\n                  },\n                  (v10/*: any*/),\n                  (v11/*: any*/),\n                  (v12/*: any*/)\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": \"repositories(first:100,orderBy:{\\\"direction\\\":\\\"DESC\\\",\\\"field\\\":\\\"CREATED_AT\\\"})\"\n          },\n          (v12/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"b258f42d69128e61871bd13f8cad28f2\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"HomeRepositoryNameQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query HomeRepositoryNameQuery(\\n  $usr: String!\\n) {\\n  user(login: $usr) {\\n    repositories(first: 100, orderBy: {field: CREATED_AT, direction: DESC}) {\\n      nodes {\\n        name\\n        description\\n        collaborators(first: 10) {\\n          nodes {\\n            name\\n            id\\n          }\\n        }\\n        issues(first: 10, orderBy: {field: CREATED_AT, direction: DESC}) {\\n          nodes {\\n            __typename\\n            id\\n          }\\n        }\\n        createdAt\\n        url\\n        id\\n      }\\n    }\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '4eefc8a216225692fcb60765fe4c6b4c';\n\nmodule.exports = node;\n","import { GithubAuthProvider } from \"firebase/auth\";\n\nconst githubProvider = new GithubAuthProvider();\n\nexport default githubProvider;","import { createContext } from \"react\";\n\nconst TokenContext = createContext()\n\nexport default TokenContext;","import React from \"react\";\nimport { Button, Container, Box, Typography } from \"@mui/material\";\nimport DoubleArrowIcon from \"@mui/icons-material/DoubleArrow\";\nimport githubProvider from \"../../config/authMethods\";\nimport { useContext } from \"react\";\nimport TokenContext from \"../../context/Token/TokenContext\";\n\nexport default function Body() {\n  const validation = useContext(TokenContext);\n\n  return (\n    <Container\n      fixed\n      sx={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"80vh\",\n      }}\n    >\n      <Box>\n        <Typography\n          color=\"mintcream\"\n          my={3}\n          sx={{ fontSize: 100, fontWeight: 300 }}\n        >\n          OAuth App with React Relay (GraphQl)\n        </Typography>\n\n        <Button\n          onClick={() => validation.signInAuth(githubProvider)}\n          size=\"large\"\n          variant=\"contained\"\n          sx={{ fontSize: 18 ,backgroundColor:\"black\",\"&:hover\":{backgroundColor:\"gray\",color:\"black\"}}}\n        >\n         GitHub Login\n          <DoubleArrowIcon />\n        </Button>\n      </Box>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport {\n  Container,\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n  IconButton,\n} from \"@mui/material\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\n\n\nexport default function Navbar() {\n\n  return (\n    <Box>\n      <AppBar position=\"static\" sx={{backgroundColor:\"black\"}}>\n        <Toolbar>\n          <Container\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              flexGrow: 1\n            }}\n          >\n            <Box\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <IconButton color=\"inherit\">\n                <GitHubIcon size=\"large\" />\n              </IconButton>\n              <Typography\n                mx={1}\n                sx={{ fontWeight: 700, fontSize: 18, letterSpacing: 2 }}\n              >\n                OAuth-Application\n              </Typography>\n            </Box>\n          </Container>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}","import React from \"react\";\nimport TokenContext from \"./TokenContext\";\nimport { getAuth, signInWithPopup, GithubAuthProvider } from \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { useState } from \"react\";\n\nconst TokenState = (props) => {\n\n    const [tokenValue, setTokenValue] = useState(\"\")\n\n    const firebaseConfig = {\n        apiKey: \"AIzaSyDPWWVqKEJ6w3ZETTm9qB2BVY0stqOO4NA\",\n        authDomain: \"oauth-app-3e936.firebaseapp.com\",\n        projectId: \"oauth-app-3e936\",\n        storageBucket: \"oauth-app-3e936.appspot.com\",\n        messagingSenderId: \"855299737848\",\n        appId: \"1:855299737848:web:c40491641c94fea476d30d\",\n        measurementId: \"G-TLJR6WTSJP\"\n    };\n\n    // Initialize Firebase\n    const app = initializeApp(firebaseConfig);\n\n    const signInAuth = (provider) => {\n        const auth = getAuth(app);\n        signInWithPopup(auth, provider)\n            .then((result) => {\n\n                // This gives you a GitHub Access Token. You can use it to access the GitHub API.\n                const credential = GithubAuthProvider.credentialFromResult(result);\n                const token = credential.accessToken;\n\n                console.log(token)\n\n                setTokenValue(token);\n                localStorage.setItem(\"token\", token);\n\n                // The signed-in user info.\n                const user =  result?.user?.reloadUserInfo?.screenName;\n                console.log(user)\n\n                localStorage.setItem(\"user\", user);\n\n                if (user) {\n                    window.location = '/home'\n                } else {\n                    window.location = \"/\";\n                }\n                // ...\n            }).catch((error) => {\n                window.location = \"/\";\n            });\n    }\n\n\n    return (\n        <TokenContext.Provider value={{ tokenValue, signInAuth }}>\n            {props.children}\n        </TokenContext.Provider>\n    )\n}\n\nexport default TokenState","import './App.css';\nimport Body from './components/body/Body';\nimport Navbar from './components/navbar/Navbar';\nimport TokenState from './context/Token/TokenState';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <TokenState>\n    <Navbar/>\n    <Body/>\n    </TokenState>\n    </div>\n  );\n}\n\nexport default App;\n","import * as React from 'react';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport List from '@mui/material/List';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Slide from '@mui/material/Slide';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nconst columns = [\r\n  { field: 'name', headerName: 'Name', width: 500 },\r\n  { field: 'createDate', headerName: 'Created Date', width: 165 },\r\n  { field: 'url', headerName: 'Github Repo Url', width: 200 },\r\n];\r\n\r\n\r\nexport default function ListComponent(data) {\r\n    const [open, setOpen] = React.useState(false)\r\n    const [row, setRow] = React.useState({})\r\n    const rows = data?.data?.map((d,i)=>Object.assign({\r\n        id:i,\r\n        name:d.name,\r\n        createDate:d.createdAt,\r\n        url:d.url\r\n    }))\r\n    const clicked = (event)=>{\r\n        console.log(event)\r\n      setOpen(true)\r\n      setRow(event.row)\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n      };\r\n    \r\n  return (\r\n    <>\r\n    <div style={{ height: 400, width: '100%' }}>\r\n      <DataGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        pageSize={5}\r\n        rowsPerPageOptions={[5]}\r\n        onRowClick={clicked}\r\n      />\r\n    </div>\r\n    <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar sx={{ position: 'relative' }}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\r\n              {row.name}\r\n            </Typography>\r\n        \r\n          </Toolbar>\r\n        </AppBar>\r\n        <List>\r\n          <ListItem>\r\n            <ListItemText primary=\"Repository Name\" secondary={row.name} />\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary=\"Created Date\" secondary={row.createDate} />\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary=\"Repository Url\" secondary={<a href={row.url} rel=\"noreferrer\" target={'_blank'}>{row.url}</a>} />\r\n          </ListItem>\r\n        </List>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","async function FetchGraphQL(text, variables) {\n  const TOKEN = localStorage.getItem(\"token\");\n  console.log(TOKEN);\n  // Fetch data from GitHub's GraphQL API:\n  const response = await fetch(\"https://api.github.com/graphql\", {\n    method: \"POST\",\n    headers: {\n      Authorization: `bearer  ${TOKEN}`,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: text,\n      variables,\n    }),\n  });\n\n  // Get the response as JSON\n  return response.json();\n}\n\nexport default FetchGraphQL;\n","import { Environment, Network, RecordSource, Store } from \"relay-runtime\";\nimport FetchGraphQL from \"./FetchGraphQL\";\n\nasync function fetchRelay(params, variables) {\n    console.log(\n        `fetching query ${params.name} with ${JSON.stringify(variables)}`\n    );\n    return await FetchGraphQL(params.text, variables);\n}\n\n// Export a singleton instance of Relay Environment conf2igured with our network function:\nconst env = new Environment({\n    network: Network.create(fetchRelay),\n    store: new Store(new RecordSource()),\n});\n\nexport default env;","import React from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport ListComponent from './List'\nimport {\n  RelayEnvironmentProvider,\n  loadQuery,\n  usePreloadedQuery,\n} from \"react-relay/hooks\";\nimport env from \"../RelayEnvironment\";\nimport {\n  Button,\n  Container,\n  Box,\n  Typography,\n  CircularProgress,\n} from \"@mui/material\";\n\nconst { Suspense } = React;\n\nconst RepositoryNameQuery = graphql`\n  query HomeRepositoryNameQuery($usr: String!) {\n    user(login: $usr) {\n      repositories(first: 100, orderBy: { field: CREATED_AT, direction: DESC }) {\n        nodes {\n          name\n          description\n          collaborators(first: 10) {\n            nodes {\n              name\n            }\n          }\n          issues(first: 10, orderBy: { field: CREATED_AT, direction: DESC }) {\n            nodes {\n              __typename\n            }\n          }\n          createdAt\n          url\n        }\n      }\n    }\n  }\n`;\n\nconst preloadedQuery = loadQuery(env, RepositoryNameQuery, {\n  usr: localStorage.getItem(\"user\"),\n});\n\nfunction Home(props) {\n  const data = usePreloadedQuery(RepositoryNameQuery, props.preloadedQuery);\n\n  const signOut = () => {\n    localStorage.clear();\n    window.location = \"/\";\n  };\n\n  return (\n    <div id=\"home\" key='i'>\n    <Container fluid>\n      {data ? (\n        <Box>\n         <Box sx={{display:\"flex\" ,  flexDirection:\"row\" , justifyContent:\"space-between\" , alignItems:\"center\" }}>\n         <Typography\n            color=\"#757575\"\n            my={5}\n            variant=\"h2\"\n          >\n            Repositories\n          </Typography>\n          <Button size=\"large\" variant=\"text\" onClick={signOut}>\n            Sign Out\n          </Button>\n         </Box>\n         <hr/>\n         <br />\n          <Box\n            sx={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-between\",\n              alignItems: \"stretch\",\n            }}\n          >\n            <ListComponent data={data?.user?.repositories?.nodes}/>\n          </Box>\n        </Box>\n      ) : (\n        <h1>no data found</h1>\n      )}\n    </Container>\n    </div>\n  );\n}\n\nfunction HomeRoot(props) {\n  return (\n    <RelayEnvironmentProvider environment={env}>\n      <Suspense\n        fallback={\n          <Box\n            sx={{\n              value: \"user.id\",\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"100vh\",\n            }}\n          >\n            <CircularProgress color=\"inherit\" />\n          </Box>\n        }\n      >\n        <Home preloadedQuery={preloadedQuery} />\n      </Suspense>\n    </RelayEnvironmentProvider>\n  );\n}\n\nexport default HomeRoot;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {\n  BrowserRouter,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport Home from './route/Home';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />} />\n        <Route path=\"home\" element={<Home />} />\n      </Routes>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}